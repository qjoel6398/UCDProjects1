SQL
public.ne_10m_urban_areas
public.ne_10m_admin_0_countries
public.geocodingdata112617
piblicne_10m_roads

--clip country boundaries to europe
SELECT *
INTO public.Europe
FROM ne_10m_admin_0_countries
WHERE region_un = 'Europe';

--clip urban areas to europe and join country names to urban areas
create table public.UrbanCountries as
select europe.name, ne_10m_urban_areas.gid, ne_10m_urban_areas.geom
FROM europe, ne_10m_urban_areas
where ST_Intersects(europe.geom, ne_10m_urban_areas.geom);

--clip SPI to Europe
create table public.EuropeSPI as
select geocodingdata112617.*, europe.name
FROM europe, geocodingdata112617
where ST_Intersects(europe.geom, geocodingdata112617.geom);

--how many TT customers in urban areas?
create table public.EuropeTT1 as
select EuropeSPI.*
FROM UrbanCountries, EuropeSPI
where EuropeSPI.tt_graduat = 1;
--sum customers by country
create table public.TT_Sum as
SELECT name, SUM(tt_graduat) AS TTCount
FROM EuropeTT1
GROUP BY name

--how many DT customers in urban areas?
create table public.EuropeDT as
select EuropeSPI.*
FROM UrbanCountries, EuropeSPI
where EuropeSPI.dt_graduat = 1;
--sum customers by country
SELECT name, SUM(tt_graduat) AS TTCount
FROM EuropeTT
GROUP BY id

--how many CT customers in urban areas?
create table public.EuropeCT as
select EuropeSPI.*
FROM UrbanCountries, EuropeSPI
where EuropeSPI.ct_graduat = 1;
--sum customers by country
SELECT name, SUM(tt_graduat) AS TTCount
FROM EuropeTT
GROUP BY id

/* Union of urban areas with in order to "cut" urban areas to delineate them cleanly by country.
As it stands right now, one urban area can span two countries. After you successfully complete this, join country names to this and select out.
This will allow you to accurately find urban/nonurban ratio for countries*/
create table public.EuroUnion as
select europe.geom, ne_10m_urban_areas.geom
FROM europe, ne_10m_urban_areas
with ST_Union(europe.geom, ne_10m_urban_areas.geom) as the_geom;
